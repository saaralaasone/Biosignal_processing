%Assignment 1 - task 1
%Load the data/variables from the file named spirometer.txt
spiro = load('spirometer.txt')

% The spirometer data 'spiro' is a 2Nx1 vector
% Resample the spirometer data into 50 Hz
spiro_resampled = resample(spiro,1,2)
-----------------------------------------
%Assignment 1 - task 2
% Load the belt data into Nx2 matrix from the file beltsignals.txt
belt = load('beltsignals.txt')
% Load the resampled spirometer data into Nx1 vector from the file spiro_resampled.mat
spiro_resampled = load('spiro_resampled.mat')
sr = struct2array(spiro_resampled)
% Load the regression coefficients vector for the model 1 from the file regressioncoefficients1.txt
coeff1 = load('regressioncoefficients1.txt')
% Load the regression coefficients vector for the model 2 from the file regressioncoefficients2.txt
coeff2 = load('regressioncoefficients2.txt')
% Load the regression coefficients vector for the model 3 from the file regressioncoefficients3.txt
coeff3 = load('regressioncoefficients3.txt')
% Predict the airflow using the model 1, that is with coeff1
flow1 = coeff1(1).*belt(:,1)+coeff1(2).*belt(:,2);
% Predict the airflow using the model 2, that is with coeff2
flow2 = coeff2(1).*belt(:,1)+coeff2(2).*belt(:,2)+coeff2(3).*belt(:,1).^2+coeff2(4).*belt(:,2).^2;
% Predict the airflow using the model 3,  that is with coeff3
flow3 = coeff3(1).*belt(:,1)+coeff3(2).*belt(:,2)+coeff3(3).*belt(:,1).*belt(:,2);
-----------------------------
%Assignment 1 - task 3
% Load the data from the file problem3.mat
p3 = load("problem3.mat");
belt=p3.belt;
flow1=p3.flow1;
flow2=p3.flow2;
flow3=p3.flow3;
spiro_resampled=p3.spiro_resampled;

% Nx1 vectors flow1, flow2, and flow3 contain the model predictions
% Nx1 vector spiro_resampled contains the resampled reference spirometer data

% Compute the correlation coefficient for the model 1, between flow1 and spiro_resampled
x_1=mean(flow1);
y_=mean(spiro_resampled);
N=length(flow1);
sum1=0;
for n=1:N
    S=flow1(n)*spiro_resampled(n);
    sum1=sum1+S;
end
upper=(sum1-N*x_1*y_)^2;
sum2=0;
for n=1:N
    S=flow1(n)^2;
    sum2=sum2+S;
end
lower1=sum2-N*x_1^2;
sum3=0;
for n=1:N
    S=spiro_resampled(n)^2;
    sum3=sum3+S;
end
lower2=sum3-N*y_^2;
lower=lower1*lower2;
corr1=sqrt(upper/lower);

% Compute the correlation coefficient for the model 2, between flow2 and spiro_resampled
x_2=mean(flow2);
sum1=0;
for n=1:N
    S=flow2(n)*spiro_resampled(n);
    sum1=sum1+S;
end
upper=(sum1-N*x_2*y_)^2;
sum2=0;
for n=1:N
    S=flow2(n)^2;
    sum2=sum2+S;
end
lower1=sum2-N*x_2^2;
sum3=0;
for n=1:N
    S=spiro_resampled(n)^2;
    sum3=sum3+S;
end
lower2=sum3-N*y_^2;
lower=lower1*lower2;
corr2=sqrt(upper/lower); 

% Compute the correlation coefficient for the model 3, between flow3 and spiro_resampled
x_3=mean(flow3);
sum1=0;
for n=1:N
    S=flow3(n)*spiro_resampled(n);
    sum1=sum1+S;
end
upper=(sum1-N*x_3*y_)^2;
sum2=0;
for n=1:N
    S=flow3(n)^2;
    sum2=sum2+S;
end
lower1=sum2-N*x_3^2;
sum3=0;
for n=1:N
    S=spiro_resampled(n)^2;
    sum3=sum3+S;
end
lower2=sum3-N*y_^2;
lower=lower1*lower2;
corr3=sqrt(upper/lower);

% Compute the RMSE for the model 1, between flow1 and spiro_resampled
N=length(spiro_resampled);
sumr1=0;
for n=1:N
    S=(spiro_resampled(n)-flow1(n))^2;
    sumr1=sumr1+S;
end
rmse1 = sqrt(sumr1/N);

% Compute the RMSE for the model 2, between flow2 and spiro_resampled
sumr2=0;
for n=1:N
    S=(spiro_resampled(n)-flow2(n))^2;
    sumr2=sumr2+S;
end
rmse2 = sqrt(sumr2/N);

% Compute the RMSE for the model 3, between flow3 and spiro_resampled
sumr3=0;
for n=1:N
    S=(spiro_resampled(n)-flow3(n))^2;
    sumr3=sumr3+S;
end
rmse3 = sqrt(sumr3/n);
